---
alwaysApply: true
---
# Microservice API Architecture

## Directory structure

- **models/** - SQLAlchemy models (database tables)
- **schemas/** - Pydantic models (API data validation)
- **repositories/** - Data access layer (database queries)
- **services/** - Business logic layer (processing, errors, logging)
- **api/routes/** - API REST endpoints
- **utils/** - Utility functions (reusable helpers)

## Files in /app directory

- **config.py** - Application settings (via pydantic-settings)
- **database.py** - Database configuration (SQLAlchemy setup) & base SQLAlchemy model
- **mappings.py** - custom python types for SQLAlchemy models and their mappings into SQL
- **main.py** - Application entrypoint (FastAPI app)

## Simplified data flow

request → schema -> route → service → repository → model → database

## Detailed rules

- `.cursor/rules/models.mdc` - SQLAlchemy models
- `.cursor/rules/schemas.mdc` - Pydantic schemas
- `.cursor/rules/repositories.mdc` - Data repositories
- `.cursor/rules/services.mdc` - Business services
- `.cursor/rules/routes.mdc` - API endpoints
