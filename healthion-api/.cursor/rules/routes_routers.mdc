---
description: Rules how to structure routers hierarchy in applications
alwaysApply: false
---
# Building API Routes

## Router types

### 1. Module routers (e.g., `example.py`)
- Create `router = APIRouter()` without prefixes or tags

### 2. Version router (`app/api/routes/v1/__init__.py`)
- Imports all module routers for this version
- Includes them with appropriate tags (singular + kebab-case)
- **NO prefix** here

**Example structure:**
```python
from fastapi import APIRouter

from .example import router as example_router

v1_router = APIRouter()
v1_router.include_router(example_router, tags=["example"])

__all__ = ["v1_router"]
```

### 3. Head router (`app/api/routes/__init__.py`)
- Imports all version routers
- Includes them with version prefix from settings

**Example structure:**
```python
from fastapi import APIRouter

from app.api.routes.v1 import v1_router
from app.api.routes.v2 import v2_router  # if exists
from app.config import settings

head_router = APIRouter()
head_router.include_router(v1_router, prefix=settings.api_v1)
head_router.include_router(v2_router, prefix=settings.api_v2)  # if exists

__all__ = ["head_router"]
```

### 4. Main router (`main.py`)
- Imports `head_router` from `app.api`
- **NO prefix** here

**Example structure:**
```python
from fastapi import FastAPI

from app.api import head_router

api = FastAPI()
api.include_router(head_router)
```

## Naming conventions

- Use **singular** form for tags: `"user"`, `"workout"`, `"heart-rate"`
- Use **kebab-case** for multi-word tags: `"heart-rate"`, `"import-data"`
- Tags are added at version level (`v1/__init__.py`)

## Prefix rules

- **Version prefix**: Added in `app/api/routes/__init__.py` from settings